import { getOnlyProduct } from "@/app/api/products/product.api";
import ProductDetail from "@/components/layouts/product_details/ProductDetail";
import { Metadata } from "next";
import { Product } from "@/types/backend";

// ƒê·ªãnh nghƒ©a ki·ªÉu PageProps
interface PageProps {
  params: Record<string, string>; // üî• S·ª≠a ki·ªÉu params
  searchParams?: Record<string, string | string[] | undefined>;
}

// üõ† T·∫°o metadata ƒë·ªông cho SEO
export async function generateMetadata({
  params,
}: PageProps): Promise<Metadata> {
  console.log("Ki·ªÉm tra slug: ", params.slug);
  try {
    const productResponse = await getOnlyProduct(params.slug);
    const product = productResponse?.data?.result as Product | undefined;

    if (!product) {
      return {
        title: "S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i | T√™n Shop",
        description: "S·∫£n ph·∫©m b·∫°n t√¨m ki·∫øm kh√¥ng t·ªìn t·∫°i ho·∫∑c ƒë√£ b·ªã x√≥a.",
      };
    }

    const title = `${product.name} | Mua gi√° t·ªët t·∫°i T√™n Shop`;
    const description =
      product.description?.length > 160
        ? product.description.substring(0, 157) + "..."
        : product.description ||
          `Mua ${product.name} v·ªõi gi√° t·ªët t·∫°i T√™n Shop.`;

    const imageUrl =
      product.assets?.[0]?.asset.path || "/images/default-image.jpg";

    return {
      title,
      description,
      openGraph: {
        title,
        description,
        url: `http://localhost:3000/${params.slug}`,
        images: [{ url: imageUrl, width: 800, height: 600 }],
      },
      twitter: {
        card: "summary_large_image",
        title,
        description,
        images: [imageUrl],
      },
    };
  } catch (error) {
    console.error("L·ªói khi l·∫•y metadata s·∫£n ph·∫©m:", error);
    return {
      title: "L·ªói t·∫£i d·ªØ li·ªáu s·∫£n ph·∫©m | T√™n Shop",
      description: `Kh√¥ng th·ªÉ t·∫£i th√¥ng tin s·∫£n ph·∫©m do l·ªói: ${
        error instanceof Error ? error.message : "Kh√¥ng x√°c ƒë·ªãnh"
      }. Vui l√≤ng th·ª≠ l·∫°i sau.`,
    };
  }
}

// üõ† L·∫•y d·ªØ li·ªáu s·∫£n ph·∫©m t·ª´ API
export default async function ProductPage({ params }: PageProps) {
  try {
    const productResponse = await getOnlyProduct(params.slug);
    const initialProduct = productResponse?.data?.result as Product | undefined;

    if (!initialProduct) {
      return <div>S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i</div>;
    }

    return <ProductDetail slug={params.slug} initialProduct={initialProduct} />;
  } catch (error) {
    console.error("L·ªói khi t·∫£i trang s·∫£n ph·∫©m:", error);
    return <div>ƒê√£ x·∫£y ra l·ªói khi t·∫£i s·∫£n ph·∫©m.</div>;
  }
}
