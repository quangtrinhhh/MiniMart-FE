import { getOnlyProduct } from "@/app/api/products/product.api";
import ProductDetail from "@/components/layouts/product_details/ProductDetail";
import { Metadata } from "next";
import { Product } from "@/types/backend";

// ƒê·ªãnh nghƒ©a ki·ªÉu PageProps
interface PageProps {
  params: Record<string, string>; // üî• S·ª≠a ki·ªÉu params
  searchParams?: Record<string, string | string[] | undefined>;
}

// üõ† T·∫°o metadata ƒë·ªông cho SEO
export async function generateMetadata({
  params,
}: PageProps): Promise<Metadata> {
  try {
    const productResponse = await getOnlyProduct(params.slug);
    const product = productResponse?.data?.result as Product | undefined;

    if (!product) {
      return { title: "S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i" };
    }

    return {
      title: `${product.name} | T√™n Shop`,
      description: product.description?.substring(0, 160) || "",
      openGraph: {
        images: product.assets?.length
          ? [{ url: product.assets[0].asset.path, width: 800, height: 600 }]
          : [],
      },
    };
  } catch (error) {
    console.error("L·ªói khi l·∫•y metadata s·∫£n ph·∫©m:", error);
    return { title: "L·ªói t·∫£i d·ªØ li·ªáu s·∫£n ph·∫©m" };
  }
}

// üõ† L·∫•y d·ªØ li·ªáu s·∫£n ph·∫©m t·ª´ API
export default async function ProductPage({ params }: PageProps) {
  try {
    const productResponse = await getOnlyProduct(params.slug);
    const initialProduct = productResponse?.data?.result as Product | undefined;

    if (!initialProduct) {
      return <div>S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i</div>;
    }

    return <ProductDetail slug={params.slug} initialProduct={initialProduct} />;
  } catch (error) {
    console.error("L·ªói khi t·∫£i trang s·∫£n ph·∫©m:", error);
    return <div>ƒê√£ x·∫£y ra l·ªói khi t·∫£i s·∫£n ph·∫©m.</div>;
  }
}
